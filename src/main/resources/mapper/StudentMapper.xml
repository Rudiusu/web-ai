<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.StudentMapper">
    <select id="list" resultType="com.itheima.pojo.Student">
      select s.*,c.name clazzName from student s left join clazz c on s.clazz_id = c.id
      <where>
          <if test="name != null and name != ''">
              s.name like concat('%',#{name},'%')
          </if>
          <if test="clazzId != null">
              and  clazz_id = #{clazzId}
          </if>
          <if test="degree != null ">
              and  degree = #{degree}
          </if>
      </where>
      order by update_time desc
    </select>
    <select id="getCountStudentOfClazz" resultType="java.lang.Integer">
        select count(s.id) from clazz c left outer join student s on c.id = s.clazz_id  where c.id = #{id} group by c.id;
    </select>
    <select id="getStudentById" resultType="com.itheima.pojo.Student">
        select * from student where id=#{id}
    </select>
    <select id="studentGender" resultType="java.util.Map">
        select
        (case degree
        when 1 then '初中'
        when 2 then '高中'
        when 3 then '大专'
        when 4 then '本科'
        when 5 then '硕士'
        when 6 then '博士'
        end) as name,
        count(*) value
        from student group by degree;
    </select>
    <insert id="insert">
        insert into student (name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, create_time, update_time) value
        (#{name},#{no},#{gender},#{phone},#{idCard},#{isCollege},#{address},#{degree},#{graduationDate}, #{clazzId}, #{createTime}, #{updateTime})
    </insert>
    <update id="update">
        update student
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="no != null">
                no=#{no},
            </if>
            <if test="gender != null">
                gender=#{gender},
            </if>
            <if test="phone != null">
                phone=#{phone},
            </if>
            <if test="idCard != null">
                id_card=#{idCard},
            </if>
            <if test="isCollege!= null">
                is_college=#{isCollege},
            </if>
            <if test="address!= null">
                address=#{address},
            </if>
            <if test="degree!= null">
                degree=#{degree},
            </if>
            <if test="graduationDate != null">
                graduation_date=#{graduationDate},
            </if>
            <if test="clazzId != null">
                clazz_id=#{clazzId},
            </if>
            <if test="violationCount != null">
                violation_count=#{violationCount},
            </if>
            <if test="violationScore != null">
                violation_score=#{violationScore},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete">
        delete from student
        <where >
            id in
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </delete>
</mapper>